name: Multi-RDP Setup

on:
  workflow_dispatch:

jobs:
  multi-rdp:
    runs-on: windows-latest
    timeout-minutes: 360 # Max 6 hours
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set Python Path
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install GitHub Runner Tools
        run: |
          python -m pip install --upgrade pip

      - name: Setup Multiple RDP Users
        run: |
          $users = @("RDP1","RDP2","RDP3") # Add as many users as you need
          $password = "1234"

          foreach ($user in $users) {

            # Remove if exists
            if (Get-LocalUser -Name $user -ErrorAction SilentlyContinue) {
                Remove-LocalUser -Name $user
            }

            # Create new RDP user
            $securePass = ConvertTo-SecureString $password -AsPlainText -Force
            New-LocalUser -Name $user -Password $securePass -AccountNeverExpires
            Add-LocalGroupMember -Group "Administrators" -Member $user
            Add-LocalGroupMember -Group "Remote Desktop Users" -Member $user

            # Enable RDP
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0 -Force
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0 -Force
            Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0 -Force
            netsh advfirewall firewall delete rule name="AllowRDP" >$null 2>&1
            netsh advfirewall firewall add rule name="AllowRDP" dir=in action=allow protocol=TCP localport=3389

            # Prevent timeouts
            $regPath = 'HKLM:\SOFTWARE\Policies\Microsoft\Windows NT\Terminal Services'
            if (-not (Test-Path $regPath)) { New-Item -Path $regPath -Force | Out-Null }
            Set-ItemProperty -Path $regPath -Name "MaxDisconnectionTime" -Value 0 -Type DWord -Force
            Set-ItemProperty -Path $regPath -Name "MaxIdleTime" -Value 0 -Type DWord -Force
            Set-ItemProperty -Path $regPath -Name "MaxSessionTime" -Value 0 -Type DWord -Force

            # Disable screensaver / power saving
            Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "ScreenSaveTimeOut" -Value "0" -Force
            Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "ScreenSaverIsSecure" -Value "0" -Force
            Set-ItemProperty -Path "HKCU:\Control Panel\Desktop" -Name "SCRNSAVE.EXE" -Value "" -Force
            powercfg /change standby-timeout-ac 0
            powercfg /change monitor-timeout-ac 0
            powercfg /change disk-timeout-ac 0
            powercfg /hibernate off

            # Restart RDP service
            Restart-Service TermService -Force

            # Create Downloads/new_folder and copy repo files
            $downloads = [Environment]::GetFolderPath("UserProfile") + "\Downloads\new_folder"
            New-Item -Path $downloads -ItemType Directory -Force
            Copy-Item -Path "${{ github.workspace }}\prox.txt" -Destination $downloads -Force
            Copy-Item -Path "${{ github.workspace }}\rpa.json" -Destination $downloads -Force
            Copy-Item -Path "${{ github.workspace }}\useragent.txt" -Destination $downloads -Force
            Copy-Item -Path "${{ github.workspace }}\humanex.py" -Destination $downloads -Force

            # Install Python dependencies
            python -m pip install --upgrade pip
            python -m pip install PyQt5 playwright requests
            playwright install

            Write-Host "âœ… Setup complete for user $user"
          }

      - name: Keep Sessions Alive
        run: |
          while ($true) {
            Write-Host "[$(Get-Date)] All RDP sessions active"
            Start-Sleep -Seconds 300
          }
